trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  serviceConnection : 'sc-azure'
  functionAppName: 'AzFunctionInterets'

stages:
- stage: 'Build'
  displayName: 'Build the application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/AzFunctionInterets.csproj'
      displayName: 'restaurer les packages'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'
        projects: '**/AzFunctionInterets.csproj'
      displayName: 'Génération de la solution'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '**/AzFunctionInterets.csproj'
        publishWebProjects: false
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      displayName: 'Génération du package de publication'
      
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publication du package dans Azure DevOps'

- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure Function Deploy'
            inputs:
              azureSubscription: $(serviceConnection)
              appType: functionApp
              appName: '$(functionAppName)'
              package: '$(Build.ArtifactStagingDirectory)/package.zip'
              startUpCommand: 'func azure functionapp publish $(functionAppName) --no-bundler'